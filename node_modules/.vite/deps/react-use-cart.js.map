{
  "version": 3,
  "sources": ["../../react-use-cart/src/useLocalStorage.ts", "../../react-use-cart/src/index.tsx"],
  "sourcesContent": ["import * as React from \"react\";\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string\n): [string, (value: Function | string) => void] {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item =\n        typeof window !== \"undefined\" && window.localStorage.getItem(key);\n\n      return item ? item : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: Function | string) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      setStoredValue(valueToStore);\n\n      window.localStorage.setItem(key, valueToStore);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n", "import * as React from \"react\";\n\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport interface Item {\n  id: string;\n  price: number;\n  quantity?: number;\n  itemTotal?: number;\n  [key: string]: any;\n}\n\ninterface InitialState {\n  id: string;\n  items: Item[];\n  isEmpty: boolean;\n  totalItems: number;\n  totalUniqueItems: number;\n  cartTotal: number;\n  metadata?: Metadata;\n}\n\nexport interface Metadata {\n  [key: string]: any;\n}\n\ninterface CartProviderState extends InitialState {\n  addItem: (item: Item, quantity?: number) => void;\n  removeItem: (id: Item[\"id\"]) => void;\n  updateItem: (id: Item[\"id\"], payload: object) => void;\n  setItems: (items: Item[]) => void;\n  updateItemQuantity: (id: Item[\"id\"], quantity: number) => void;\n  emptyCart: () => void;\n  getItem: (id: Item[\"id\"]) => any | undefined;\n  inCart: (id: Item[\"id\"]) => boolean;\n  clearCartMetadata: () => void;\n  setCartMetadata: (metadata: Metadata) => void;\n  updateCartMetadata: (metadata: Metadata) => void;\n}\n\nexport type Actions =\n  | { type: \"SET_ITEMS\"; payload: Item[] }\n  | { type: \"ADD_ITEM\"; payload: Item }\n  | { type: \"REMOVE_ITEM\"; id: Item[\"id\"] }\n  | {\n      type: \"UPDATE_ITEM\";\n      id: Item[\"id\"];\n      payload: object;\n    }\n  | { type: \"EMPTY_CART\" }\n  | { type: \"CLEAR_CART_META\" }\n  | { type: \"SET_CART_META\"; payload: Metadata }\n  | { type: \"UPDATE_CART_META\"; payload: Metadata };\n\nexport const initialState: any = {\n  items: [],\n  isEmpty: true,\n  totalItems: 0,\n  totalUniqueItems: 0,\n  cartTotal: 0,\n  metadata: {},\n};\n\nconst CartContext = React.createContext<CartProviderState | undefined>(\n  initialState\n);\n\nexport const createCartIdentifier = (len = 12) =>\n  [...Array(len)].map(() => (~~(Math.random() * 36)).toString(36)).join(\"\");\n\nexport const useCart = () => {\n  const context = React.useContext(CartContext);\n\n  if (!context) throw new Error(\"Expected to be wrapped in a CartProvider\");\n\n  return context;\n};\n\nfunction reducer(state: CartProviderState, action: Actions) {\n  switch (action.type) {\n    case \"SET_ITEMS\":\n      return generateCartState(state, action.payload);\n\n    case \"ADD_ITEM\": {\n      const items = [...state.items, action.payload];\n\n      return generateCartState(state, items);\n    }\n\n    case \"UPDATE_ITEM\": {\n      const items = state.items.map((item: Item) => {\n        if (item.id !== action.id) return item;\n\n        return {\n          ...item,\n          ...action.payload,\n        };\n      });\n\n      return generateCartState(state, items);\n    }\n\n    case \"REMOVE_ITEM\": {\n      const items = state.items.filter((i: Item) => i.id !== action.id);\n\n      return generateCartState(state, items);\n    }\n\n    case \"EMPTY_CART\":\n      return initialState;\n\n    case \"CLEAR_CART_META\":\n      return {\n        ...state,\n        metadata: {},\n      };\n\n    case \"SET_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...action.payload,\n        },\n      };\n\n    case \"UPDATE_CART_META\":\n      return {\n        ...state,\n        metadata: {\n          ...state.metadata,\n          ...action.payload,\n        },\n      };\n\n    default:\n      throw new Error(\"No action specified\");\n  }\n}\n\nconst generateCartState = (state = initialState, items: Item[]) => {\n  const totalUniqueItems = calculateUniqueItems(items);\n  const isEmpty = totalUniqueItems === 0;\n\n  return {\n    ...initialState,\n    ...state,\n    items: calculateItemTotals(items),\n    totalItems: calculateTotalItems(items),\n    totalUniqueItems,\n    cartTotal: calculateTotal(items),\n    isEmpty,\n  };\n};\n\nconst calculateItemTotals = (items: Item[]) =>\n  items.map(item => ({\n    ...item,\n    itemTotal: item.price * item.quantity!,\n  }));\n\nconst calculateTotal = (items: Item[]) =>\n  items.reduce((total, item) => total + item.quantity! * item.price, 0);\n\nconst calculateTotalItems = (items: Item[]) =>\n  items.reduce((sum, item) => sum + item.quantity!, 0);\n\nconst calculateUniqueItems = (items: Item[]) => items.length;\n\nexport const CartProvider: React.FC<{\n  children?: React.ReactNode;\n  id?: string;\n  defaultItems?: Item[];\n  onSetItems?: (items: Item[]) => void;\n  onItemAdd?: (payload: Item) => void;\n  onItemUpdate?: (payload: object) => void;\n  onItemRemove?: (id: Item[\"id\"]) => void;\n  storage?: (\n    key: string,\n    initialValue: string\n  ) => [string, (value: Function | string) => void];\n  metadata?: Metadata;\n}> = ({\n  children,\n  id: cartId,\n  defaultItems = [],\n  onSetItems,\n  onItemAdd,\n  onItemUpdate,\n  onItemRemove,\n  storage = useLocalStorage,\n  metadata,\n}) => {\n  const id = cartId ? cartId : createCartIdentifier();\n\n  const [savedCart, saveCart] = storage(\n    cartId ? `react-use-cart-${id}` : `react-use-cart`,\n    JSON.stringify({\n      id,\n      ...initialState,\n      items: defaultItems,\n      metadata,\n    })\n  );\n\n  const [state, dispatch] = React.useReducer(reducer, JSON.parse(savedCart));\n  React.useEffect(() => {\n    saveCart(JSON.stringify(state));\n  }, [state, saveCart]);\n\n  const setItems = (items: Item[]) => {\n    dispatch({\n      type: \"SET_ITEMS\",\n      payload: items.map(item => ({\n        ...item,\n        quantity: item.quantity || 1,\n      })),\n    });\n\n    onSetItems && onSetItems(items);\n  };\n\n  const addItem = (item: Item, quantity = 1) => {\n    if (!item.id) throw new Error(\"You must provide an `id` for items\");\n    if (quantity <= 0) return;\n\n    const currentItem = state.items.find((i: Item) => i.id === item.id);\n\n    if (!currentItem && !item.hasOwnProperty(\"price\"))\n      throw new Error(\"You must pass a `price` for new items\");\n\n    if (!currentItem) {\n      const payload = { ...item, quantity };\n\n      dispatch({ type: \"ADD_ITEM\", payload });\n\n      onItemAdd && onItemAdd(payload);\n\n      return;\n    }\n\n    const payload = { ...item, quantity: currentItem.quantity + quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id: item.id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItem = (id: Item[\"id\"], payload: object) => {\n    if (!id || !payload) {\n      return;\n    }\n\n    dispatch({ type: \"UPDATE_ITEM\", id, payload });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const updateItemQuantity = (id: Item[\"id\"], quantity: number) => {\n    if (quantity <= 0) {\n      onItemRemove && onItemRemove(id);\n\n      dispatch({ type: \"REMOVE_ITEM\", id });\n\n      return;\n    }\n\n    const currentItem = state.items.find((item: Item) => item.id === id);\n\n    if (!currentItem) throw new Error(\"No such item to update\");\n\n    const payload = { ...currentItem, quantity };\n\n    dispatch({\n      type: \"UPDATE_ITEM\",\n      id,\n      payload,\n    });\n\n    onItemUpdate && onItemUpdate(payload);\n  };\n\n  const removeItem = (id: Item[\"id\"]) => {\n    if (!id) return;\n\n    dispatch({ type: \"REMOVE_ITEM\", id });\n\n    onItemRemove && onItemRemove(id);\n  };\n\n  const emptyCart = () =>\n    dispatch({\n      type: \"EMPTY_CART\",\n    });\n\n  const getItem = (id: Item[\"id\"]) =>\n    state.items.find((i: Item) => i.id === id);\n\n  const inCart = (id: Item[\"id\"]) => state.items.some((i: Item) => i.id === id);\n\n  const clearCartMetadata = () => {\n    dispatch({\n      type: \"CLEAR_CART_META\",\n    });\n  };\n\n  const setCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"SET_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  const updateCartMetadata = (metadata: Metadata) => {\n    if (!metadata) return;\n\n    dispatch({\n      type: \"UPDATE_CART_META\",\n      payload: metadata,\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        ...state,\n        getItem,\n        inCart,\n        setItems,\n        addItem,\n        updateItem,\n        updateItemQuantity,\n        removeItem,\n        emptyCart,\n        clearCartMetadata,\n        setCartMetadata,\n        updateCartMetadata,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
